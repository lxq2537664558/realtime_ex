// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_battlearray.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_battlearray.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {
class battlearray_data_HeroEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<battlearray_data::battlearray_data_HeroEntry> {
} _battlearray_data_HeroEntry_default_instance_;
class battlearray_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<battlearray_data> {
} _battlearray_data_default_instance_;
class battlearray_data_wrap_DataEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<battlearray_data_wrap::battlearray_data_wrap_DataEntry> {
} _battlearray_data_wrap_DataEntry_default_instance_;
class battlearray_data_wrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<battlearray_data_wrap> {
} _battlearray_data_wrap_default_instance_;
class player_battlearrayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_battlearray> {
} _player_battlearray_default_instance_;
class player_battlearray_setDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_battlearray_set> {
} _player_battlearray_set_default_instance_;

namespace protobuf_player_5fbattlearray_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data, hero_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data_wrap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data_wrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlearray_data_wrap, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray_set, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray_set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_battlearray_set, battlearray_set_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(battlearray_data)},
  { 7, 13, sizeof(battlearray_data_wrap)},
  { 14, 21, sizeof(player_battlearray)},
  { 23, 29, sizeof(player_battlearray_set)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_battlearray_data_HeroEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_battlearray_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_battlearray_data_wrap_DataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_battlearray_data_wrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_battlearray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_battlearray_set_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player_battlearray.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = battlearray_data::battlearray_data_HeroEntry::CreateReflection(file_level_metadata[0].descriptor, _battlearray_data_HeroEntry_default_instance_.get_mutable());
file_level_metadata[2].reflection = battlearray_data_wrap::battlearray_data_wrap_DataEntry::CreateReflection(file_level_metadata[2].descriptor, _battlearray_data_wrap_DataEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _battlearray_data_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _battlearray_data_wrap_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _player_battlearray_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _player_battlearray_set_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  delete file_level_metadata[0].reflection;
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_db_5foption_2eproto::InitDefaults();
  _battlearray_data_HeroEntry_default_instance_.DefaultConstruct();
  _battlearray_data_default_instance_.DefaultConstruct();
  _battlearray_data_wrap_DataEntry_default_instance_.DefaultConstruct();
  _battlearray_data_wrap_default_instance_.DefaultConstruct();
  _player_battlearray_default_instance_.DefaultConstruct();
  _player_battlearray_set_default_instance_.DefaultConstruct();
  _battlearray_data_HeroEntry_default_instance_.get_mutable()->set_default_instance(_battlearray_data_HeroEntry_default_instance_.get_mutable());
  _battlearray_data_HeroEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _battlearray_data_wrap_DataEntry_default_instance_.get_mutable()->set_default_instance(_battlearray_data_wrap_DataEntry_default_instance_.get_mutable());
  _battlearray_data_wrap_DataEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _player_battlearray_default_instance_.get_mutable()->data_ = const_cast< ::proto::db::battlearray_data_wrap*>(
      ::proto::db::battlearray_data_wrap::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030player_battlearray.proto\022\010proto.db\032\017db"
      "_option.proto\"s\n\020battlearray_data\0222\n\004her"
      "o\030\001 \003(\0132$.proto.db.battlearray_data.Hero"
      "Entry\032+\n\tHeroEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value"
      "\030\002 \001(\r:\0028\001\"\231\001\n\025battlearray_data_wrap\0227\n\004"
      "data\030\001 \003(\0132).proto.db.battlearray_data_w"
      "rap.DataEntry\032G\n\tDataEntry\022\013\n\003key\030\001 \001(\r\022"
      ")\n\005value\030\002 \001(\0132\032.proto.db.battlearray_da"
      "ta:\0028\001\"k\n\022player_battlearray\022\021\n\tplayer_i"
      "d\030\001 \002(\004\0223\n\004data\030\002 \001(\0132\037.proto.db.battlea"
      "rray_data_wrapB\004\210\265\030\001:\r\202\265\030\tplayer_id\"O\n\026p"
      "layer_battlearray_set\0225\n\017battlearray_set"
      "\030\001 \003(\0132\034.proto.db.player_battlearray"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_battlearray.proto", &protobuf_RegisterTypes);
  ::protobuf_db_5foption_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_player_5fbattlearray_2eproto


// ===================================================================

battlearray_data::battlearray_data_HeroEntry::battlearray_data_HeroEntry() {}
battlearray_data::battlearray_data_HeroEntry::battlearray_data_HeroEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata battlearray_data::battlearray_data_HeroEntry::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[0];
}
void battlearray_data::battlearray_data_HeroEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void battlearray_data::battlearray_data_HeroEntry::MergeFrom(const battlearray_data_HeroEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int battlearray_data::kHeroFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

battlearray_data::battlearray_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbattlearray_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.battlearray_data)
}
battlearray_data::battlearray_data(const battlearray_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_.MergeFrom(from.hero_);
  // @@protoc_insertion_point(copy_constructor:proto.db.battlearray_data)
}

void battlearray_data::SharedCtor() {
  _cached_size_ = 0;
}

battlearray_data::~battlearray_data() {
  // @@protoc_insertion_point(destructor:proto.db.battlearray_data)
  SharedDtor();
}

void battlearray_data::SharedDtor() {
}

void battlearray_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* battlearray_data::descriptor() {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const battlearray_data& battlearray_data::default_instance() {
  protobuf_player_5fbattlearray_2eproto::InitDefaults();
  return *internal_default_instance();
}

battlearray_data* battlearray_data::New(::google::protobuf::Arena* arena) const {
  battlearray_data* n = new battlearray_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void battlearray_data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.battlearray_data)
  hero_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool battlearray_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.battlearray_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> hero = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          battlearray_data_HeroEntry::Parser< ::google::protobuf::internal::MapField<
              battlearray_data_HeroEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&hero_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.battlearray_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.battlearray_data)
  return false;
#undef DO_
}

void battlearray_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.battlearray_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> hero = 1;
  if (!this->hero().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->hero().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hero().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->hero().begin();
          it != this->hero().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<battlearray_data_HeroEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hero_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<battlearray_data_HeroEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->hero().begin();
          it != this->hero().end(); ++it) {
        entry.reset(hero_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.battlearray_data)
}

::google::protobuf::uint8* battlearray_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.battlearray_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> hero = 1;
  if (!this->hero().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->hero().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hero().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->hero().begin();
          it != this->hero().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<battlearray_data_HeroEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hero_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<battlearray_data_HeroEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->hero().begin();
          it != this->hero().end(); ++it) {
        entry.reset(hero_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.battlearray_data)
  return target;
}

size_t battlearray_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.battlearray_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // map<uint32, uint32> hero = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hero_size());
  {
    ::google::protobuf::scoped_ptr<battlearray_data_HeroEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->hero().begin();
        it != this->hero().end(); ++it) {
      entry.reset(hero_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void battlearray_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.battlearray_data)
  GOOGLE_DCHECK_NE(&from, this);
  const battlearray_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const battlearray_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.battlearray_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.battlearray_data)
    MergeFrom(*source);
  }
}

void battlearray_data::MergeFrom(const battlearray_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.battlearray_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hero_.MergeFrom(from.hero_);
}

void battlearray_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.battlearray_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void battlearray_data::CopyFrom(const battlearray_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.battlearray_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool battlearray_data::IsInitialized() const {
  return true;
}

void battlearray_data::Swap(battlearray_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void battlearray_data::InternalSwap(battlearray_data* other) {
  hero_.Swap(&other->hero_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata battlearray_data::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// battlearray_data

// map<uint32, uint32> hero = 1;
int battlearray_data::hero_size() const {
  return hero_.size();
}
void battlearray_data::clear_hero() {
  hero_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
battlearray_data::hero() const {
  // @@protoc_insertion_point(field_map:proto.db.battlearray_data.hero)
  return hero_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
battlearray_data::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_map:proto.db.battlearray_data.hero)
  return hero_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

battlearray_data_wrap::battlearray_data_wrap_DataEntry::battlearray_data_wrap_DataEntry() {}
battlearray_data_wrap::battlearray_data_wrap_DataEntry::battlearray_data_wrap_DataEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata battlearray_data_wrap::battlearray_data_wrap_DataEntry::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[2];
}
void battlearray_data_wrap::battlearray_data_wrap_DataEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void battlearray_data_wrap::battlearray_data_wrap_DataEntry::MergeFrom(const battlearray_data_wrap_DataEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int battlearray_data_wrap::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

battlearray_data_wrap::battlearray_data_wrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbattlearray_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.battlearray_data_wrap)
}
battlearray_data_wrap::battlearray_data_wrap(const battlearray_data_wrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:proto.db.battlearray_data_wrap)
}

void battlearray_data_wrap::SharedCtor() {
  _cached_size_ = 0;
}

battlearray_data_wrap::~battlearray_data_wrap() {
  // @@protoc_insertion_point(destructor:proto.db.battlearray_data_wrap)
  SharedDtor();
}

void battlearray_data_wrap::SharedDtor() {
}

void battlearray_data_wrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* battlearray_data_wrap::descriptor() {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const battlearray_data_wrap& battlearray_data_wrap::default_instance() {
  protobuf_player_5fbattlearray_2eproto::InitDefaults();
  return *internal_default_instance();
}

battlearray_data_wrap* battlearray_data_wrap::New(::google::protobuf::Arena* arena) const {
  battlearray_data_wrap* n = new battlearray_data_wrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void battlearray_data_wrap::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.battlearray_data_wrap)
  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool battlearray_data_wrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.battlearray_data_wrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.db.battlearray_data> data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          battlearray_data_wrap_DataEntry::Parser< ::google::protobuf::internal::MapField<
              battlearray_data_wrap_DataEntry,
              ::google::protobuf::uint32, ::proto::db::battlearray_data,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.battlearray_data_wrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.battlearray_data_wrap)
  return false;
#undef DO_
}

void battlearray_data_wrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.battlearray_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.db.battlearray_data> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<battlearray_data_wrap_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<battlearray_data_wrap_DataEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.battlearray_data_wrap)
}

::google::protobuf::uint8* battlearray_data_wrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.battlearray_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.db.battlearray_data> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<battlearray_data_wrap_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<battlearray_data_wrap_DataEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.battlearray_data_wrap)
  return target;
}

size_t battlearray_data_wrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.battlearray_data_wrap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // map<uint32, .proto.db.battlearray_data> data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  {
    ::google::protobuf::scoped_ptr<battlearray_data_wrap_DataEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void battlearray_data_wrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.battlearray_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  const battlearray_data_wrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const battlearray_data_wrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.battlearray_data_wrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.battlearray_data_wrap)
    MergeFrom(*source);
  }
}

void battlearray_data_wrap::MergeFrom(const battlearray_data_wrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.battlearray_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void battlearray_data_wrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.battlearray_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void battlearray_data_wrap::CopyFrom(const battlearray_data_wrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.battlearray_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool battlearray_data_wrap::IsInitialized() const {
  return true;
}

void battlearray_data_wrap::Swap(battlearray_data_wrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void battlearray_data_wrap::InternalSwap(battlearray_data_wrap* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata battlearray_data_wrap::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// battlearray_data_wrap

// map<uint32, .proto.db.battlearray_data> data = 1;
int battlearray_data_wrap::data_size() const {
  return data_.size();
}
void battlearray_data_wrap::clear_data() {
  data_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >&
battlearray_data_wrap::data() const {
  // @@protoc_insertion_point(field_map:proto.db.battlearray_data_wrap.data)
  return data_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::db::battlearray_data >*
battlearray_data_wrap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:proto.db.battlearray_data_wrap.data)
  return data_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_battlearray::kPlayerIdFieldNumber;
const int player_battlearray::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_battlearray::player_battlearray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbattlearray_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_battlearray)
}
player_battlearray::player_battlearray(const player_battlearray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::proto::db::battlearray_data_wrap(*from.data_);
  } else {
    data_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:proto.db.player_battlearray)
}

void player_battlearray::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&data_, 0, reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&data_) + sizeof(player_id_));
}

player_battlearray::~player_battlearray() {
  // @@protoc_insertion_point(destructor:proto.db.player_battlearray)
  SharedDtor();
}

void player_battlearray::SharedDtor() {
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void player_battlearray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_battlearray::descriptor() {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_battlearray& player_battlearray::default_instance() {
  protobuf_player_5fbattlearray_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_battlearray* player_battlearray::New(::google::protobuf::Arena* arena) const {
  player_battlearray* n = new player_battlearray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_battlearray::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_battlearray)
  if (has_data()) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->::proto::db::battlearray_data_wrap::Clear();
  }
  player_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_battlearray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_battlearray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.db.battlearray_data_wrap data = 2 [(.serialize_type) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_battlearray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_battlearray)
  return false;
#undef DO_
}

void player_battlearray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_battlearray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // optional .proto.db.battlearray_data_wrap data = 2 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_battlearray)
}

::google::protobuf::uint8* player_battlearray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_battlearray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // optional .proto.db.battlearray_data_wrap data = 2 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_battlearray)
  return target;
}

size_t player_battlearray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_battlearray)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }
  // optional .proto.db.battlearray_data_wrap data = 2 [(.serialize_type) = 1];
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_battlearray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_battlearray)
  GOOGLE_DCHECK_NE(&from, this);
  const player_battlearray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_battlearray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_battlearray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_battlearray)
    MergeFrom(*source);
  }
}

void player_battlearray::MergeFrom(const player_battlearray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_battlearray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_data()->::proto::db::battlearray_data_wrap::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void player_battlearray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_battlearray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_battlearray::CopyFrom(const player_battlearray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_battlearray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_battlearray::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void player_battlearray::Swap(player_battlearray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_battlearray::InternalSwap(player_battlearray* other) {
  std::swap(data_, other->data_);
  std::swap(player_id_, other->player_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_battlearray::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_battlearray

// required uint64 player_id = 1;
bool player_battlearray::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void player_battlearray::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
void player_battlearray::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void player_battlearray::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
::google::protobuf::uint64 player_battlearray::player_id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_battlearray.player_id)
  return player_id_;
}
void player_battlearray::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_battlearray.player_id)
}

// optional .proto.db.battlearray_data_wrap data = 2 [(.serialize_type) = 1];
bool player_battlearray::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void player_battlearray::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void player_battlearray::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void player_battlearray::clear_data() {
  if (data_ != NULL) data_->::proto::db::battlearray_data_wrap::Clear();
  clear_has_data();
}
const ::proto::db::battlearray_data_wrap& player_battlearray::data() const {
  // @@protoc_insertion_point(field_get:proto.db.player_battlearray.data)
  return data_ != NULL ? *data_
                         : *::proto::db::battlearray_data_wrap::internal_default_instance();
}
::proto::db::battlearray_data_wrap* player_battlearray::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::proto::db::battlearray_data_wrap;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_battlearray.data)
  return data_;
}
::proto::db::battlearray_data_wrap* player_battlearray::release_data() {
  // @@protoc_insertion_point(field_release:proto.db.player_battlearray.data)
  clear_has_data();
  ::proto::db::battlearray_data_wrap* temp = data_;
  data_ = NULL;
  return temp;
}
void player_battlearray::set_allocated_data(::proto::db::battlearray_data_wrap* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_battlearray.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_battlearray_set::kBattlearraySetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_battlearray_set::player_battlearray_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbattlearray_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_battlearray_set)
}
player_battlearray_set::player_battlearray_set(const player_battlearray_set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      battlearray_set_(from.battlearray_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_battlearray_set)
}

void player_battlearray_set::SharedCtor() {
  _cached_size_ = 0;
}

player_battlearray_set::~player_battlearray_set() {
  // @@protoc_insertion_point(destructor:proto.db.player_battlearray_set)
  SharedDtor();
}

void player_battlearray_set::SharedDtor() {
}

void player_battlearray_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_battlearray_set::descriptor() {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_battlearray_set& player_battlearray_set::default_instance() {
  protobuf_player_5fbattlearray_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_battlearray_set* player_battlearray_set::New(::google::protobuf::Arena* arena) const {
  player_battlearray_set* n = new player_battlearray_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_battlearray_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_battlearray_set)
  battlearray_set_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_battlearray_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_battlearray_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_battlearray battlearray_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_battlearray_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_battlearray_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_battlearray_set)
  return false;
#undef DO_
}

void player_battlearray_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_battlearray_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_battlearray battlearray_set = 1;
  for (unsigned int i = 0, n = this->battlearray_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battlearray_set(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_battlearray_set)
}

::google::protobuf::uint8* player_battlearray_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_battlearray_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_battlearray battlearray_set = 1;
  for (unsigned int i = 0, n = this->battlearray_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->battlearray_set(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_battlearray_set)
  return target;
}

size_t player_battlearray_set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_battlearray_set)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.db.player_battlearray battlearray_set = 1;
  {
    unsigned int count = this->battlearray_set_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlearray_set(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_battlearray_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_battlearray_set)
  GOOGLE_DCHECK_NE(&from, this);
  const player_battlearray_set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_battlearray_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_battlearray_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_battlearray_set)
    MergeFrom(*source);
  }
}

void player_battlearray_set::MergeFrom(const player_battlearray_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_battlearray_set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  battlearray_set_.MergeFrom(from.battlearray_set_);
}

void player_battlearray_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_battlearray_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_battlearray_set::CopyFrom(const player_battlearray_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_battlearray_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_battlearray_set::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->battlearray_set())) return false;
  return true;
}

void player_battlearray_set::Swap(player_battlearray_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_battlearray_set::InternalSwap(player_battlearray_set* other) {
  battlearray_set_.InternalSwap(&other->battlearray_set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_battlearray_set::GetMetadata() const {
  protobuf_player_5fbattlearray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbattlearray_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_battlearray_set

// repeated .proto.db.player_battlearray battlearray_set = 1;
int player_battlearray_set::battlearray_set_size() const {
  return battlearray_set_.size();
}
void player_battlearray_set::clear_battlearray_set() {
  battlearray_set_.Clear();
}
const ::proto::db::player_battlearray& player_battlearray_set::battlearray_set(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_battlearray_set.battlearray_set)
  return battlearray_set_.Get(index);
}
::proto::db::player_battlearray* player_battlearray_set::mutable_battlearray_set(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_battlearray_set.battlearray_set)
  return battlearray_set_.Mutable(index);
}
::proto::db::player_battlearray* player_battlearray_set::add_battlearray_set() {
  // @@protoc_insertion_point(field_add:proto.db.player_battlearray_set.battlearray_set)
  return battlearray_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_battlearray >*
player_battlearray_set::mutable_battlearray_set() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_battlearray_set.battlearray_set)
  return &battlearray_set_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_battlearray >&
player_battlearray_set::battlearray_set() const {
  // @@protoc_insertion_point(field_list:proto.db.player_battlearray_set.battlearray_set)
  return battlearray_set_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)
