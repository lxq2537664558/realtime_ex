// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_hero.proto

#ifndef PROTOBUF_player_5fhero_2eproto__INCLUDED
#define PROTOBUF_player_5fhero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "db_option.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace db {
class player_hero;
class player_heroDefaultTypeInternal;
extern player_heroDefaultTypeInternal _player_hero_default_instance_;
class player_hero_data;
class player_hero_dataDefaultTypeInternal;
extern player_hero_dataDefaultTypeInternal _player_hero_data_default_instance_;
class player_hero_data_wrap;
class player_hero_data_wrapDefaultTypeInternal;
extern player_hero_data_wrapDefaultTypeInternal _player_hero_data_wrap_default_instance_;
class player_hero_patch_data;
class player_hero_patch_dataDefaultTypeInternal;
extern player_hero_patch_dataDefaultTypeInternal _player_hero_patch_data_default_instance_;
class player_hero_patch_data_wrap;
class player_hero_patch_data_wrapDefaultTypeInternal;
extern player_hero_patch_data_wrapDefaultTypeInternal _player_hero_patch_data_wrap_default_instance_;
class player_hero_set;
class player_hero_setDefaultTypeInternal;
extern player_hero_setDefaultTypeInternal _player_hero_set_default_instance_;
}  // namespace db
}  // namespace proto

namespace proto {
namespace db {

namespace protobuf_player_5fhero_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_player_5fhero_2eproto

// ===================================================================

class player_hero_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero_data) */ {
 public:
  player_hero_data();
  virtual ~player_hero_data();

  player_hero_data(const player_hero_data& from);

  inline player_hero_data& operator=(const player_hero_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero_data& default_instance();

  static inline const player_hero_data* internal_default_instance() {
    return reinterpret_cast<const player_hero_data*>(
               &_player_hero_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(player_hero_data* other);

  // implements Message ----------------------------------------------

  inline player_hero_data* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero_data& from);
  void MergeFrom(const player_hero_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.db.player_hero_data)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_hero_data_wrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero_data_wrap) */ {
 public:
  player_hero_data_wrap();
  virtual ~player_hero_data_wrap();

  player_hero_data_wrap(const player_hero_data_wrap& from);

  inline player_hero_data_wrap& operator=(const player_hero_data_wrap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero_data_wrap& default_instance();

  static inline const player_hero_data_wrap* internal_default_instance() {
    return reinterpret_cast<const player_hero_data_wrap*>(
               &_player_hero_data_wrap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(player_hero_data_wrap* other);

  // implements Message ----------------------------------------------

  inline player_hero_data_wrap* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero_data_wrap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero_data_wrap& from);
  void MergeFrom(const player_hero_data_wrap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero_data_wrap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.db.player_hero_data data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::proto::db::player_hero_data& data(int index) const;
  ::proto::db::player_hero_data* mutable_data(int index);
  ::proto::db::player_hero_data* add_data();
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >&
      data() const;

  // @@protoc_insertion_point(class_scope:proto.db.player_hero_data_wrap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data > data_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_hero_patch_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero_patch_data) */ {
 public:
  player_hero_patch_data();
  virtual ~player_hero_patch_data();

  player_hero_patch_data(const player_hero_patch_data& from);

  inline player_hero_patch_data& operator=(const player_hero_patch_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero_patch_data& default_instance();

  static inline const player_hero_patch_data* internal_default_instance() {
    return reinterpret_cast<const player_hero_patch_data*>(
               &_player_hero_patch_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(player_hero_patch_data* other);

  // implements Message ----------------------------------------------

  inline player_hero_patch_data* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero_patch_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero_patch_data& from);
  void MergeFrom(const player_hero_patch_data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero_patch_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.db.player_hero_patch_data)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_hero_patch_data_wrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero_patch_data_wrap) */ {
 public:
  player_hero_patch_data_wrap();
  virtual ~player_hero_patch_data_wrap();

  player_hero_patch_data_wrap(const player_hero_patch_data_wrap& from);

  inline player_hero_patch_data_wrap& operator=(const player_hero_patch_data_wrap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero_patch_data_wrap& default_instance();

  static inline const player_hero_patch_data_wrap* internal_default_instance() {
    return reinterpret_cast<const player_hero_patch_data_wrap*>(
               &_player_hero_patch_data_wrap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(player_hero_patch_data_wrap* other);

  // implements Message ----------------------------------------------

  inline player_hero_patch_data_wrap* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero_patch_data_wrap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero_patch_data_wrap& from);
  void MergeFrom(const player_hero_patch_data_wrap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero_patch_data_wrap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.db.player_hero_patch_data data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::proto::db::player_hero_patch_data& data(int index) const;
  ::proto::db::player_hero_patch_data* mutable_data(int index);
  ::proto::db::player_hero_patch_data* add_data();
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >&
      data() const;

  // @@protoc_insertion_point(class_scope:proto.db.player_hero_patch_data_wrap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data > data_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_hero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero) */ {
 public:
  player_hero();
  virtual ~player_hero();

  player_hero(const player_hero& from);

  inline player_hero& operator=(const player_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero& default_instance();

  static inline const player_hero* internal_default_instance() {
    return reinterpret_cast<const player_hero*>(
               &_player_hero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(player_hero* other);

  // implements Message ----------------------------------------------

  inline player_hero* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero& from);
  void MergeFrom(const player_hero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
  bool has_hero_data() const;
  void clear_hero_data();
  static const int kHeroDataFieldNumber = 2;
  const ::proto::db::player_hero_data_wrap& hero_data() const;
  ::proto::db::player_hero_data_wrap* mutable_hero_data();
  ::proto::db::player_hero_data_wrap* release_hero_data();
  void set_allocated_hero_data(::proto::db::player_hero_data_wrap* hero_data);

  // optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
  bool has_patch_data() const;
  void clear_patch_data();
  static const int kPatchDataFieldNumber = 3;
  const ::proto::db::player_hero_patch_data_wrap& patch_data() const;
  ::proto::db::player_hero_patch_data_wrap* mutable_patch_data();
  ::proto::db::player_hero_patch_data_wrap* release_patch_data();
  void set_allocated_patch_data(::proto::db::player_hero_patch_data_wrap* patch_data);

  // required uint64 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.db.player_hero)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hero_data();
  void clear_has_hero_data();
  void set_has_patch_data();
  void clear_has_patch_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::db::player_hero_data_wrap* hero_data_;
  ::proto::db::player_hero_patch_data_wrap* patch_data_;
  ::google::protobuf::uint64 player_id_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_hero_set : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.player_hero_set) */ {
 public:
  player_hero_set();
  virtual ~player_hero_set();

  player_hero_set(const player_hero_set& from);

  inline player_hero_set& operator=(const player_hero_set& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_hero_set& default_instance();

  static inline const player_hero_set* internal_default_instance() {
    return reinterpret_cast<const player_hero_set*>(
               &_player_hero_set_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(player_hero_set* other);

  // implements Message ----------------------------------------------

  inline player_hero_set* New() const PROTOBUF_FINAL { return New(NULL); }

  player_hero_set* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_hero_set& from);
  void MergeFrom(const player_hero_set& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_hero_set* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.db.player_hero hero_set = 1;
  int hero_set_size() const;
  void clear_hero_set();
  static const int kHeroSetFieldNumber = 1;
  const ::proto::db::player_hero& hero_set(int index) const;
  ::proto::db::player_hero* mutable_hero_set(int index);
  ::proto::db::player_hero* add_hero_set();
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >*
      mutable_hero_set();
  const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >&
      hero_set() const;

  // @@protoc_insertion_point(class_scope:proto.db.player_hero_set)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero > hero_set_;
  friend struct protobuf_player_5fhero_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_data

// required uint32 id = 1;
inline bool player_hero_data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_hero_data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_hero_data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_hero_data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 player_hero_data::id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_data.id)
  return id_;
}
inline void player_hero_data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero_data.id)
}

// -------------------------------------------------------------------

// player_hero_data_wrap

// repeated .proto.db.player_hero_data data = 1;
inline int player_hero_data_wrap::data_size() const {
  return data_.size();
}
inline void player_hero_data_wrap::clear_data() {
  data_.Clear();
}
inline const ::proto::db::player_hero_data& player_hero_data_wrap::data(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_data_wrap.data)
  return data_.Get(index);
}
inline ::proto::db::player_hero_data* player_hero_data_wrap::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_data_wrap.data)
  return data_.Mutable(index);
}
inline ::proto::db::player_hero_data* player_hero_data_wrap::add_data() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_data_wrap.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >*
player_hero_data_wrap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_data_wrap.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >&
player_hero_data_wrap::data() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_data_wrap.data)
  return data_;
}

// -------------------------------------------------------------------

// player_hero_patch_data

// required uint32 id = 1;
inline bool player_hero_patch_data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_hero_patch_data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_hero_patch_data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_hero_patch_data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 player_hero_patch_data::id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_patch_data.id)
  return id_;
}
inline void player_hero_patch_data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero_patch_data.id)
}

// -------------------------------------------------------------------

// player_hero_patch_data_wrap

// repeated .proto.db.player_hero_patch_data data = 1;
inline int player_hero_patch_data_wrap::data_size() const {
  return data_.size();
}
inline void player_hero_patch_data_wrap::clear_data() {
  data_.Clear();
}
inline const ::proto::db::player_hero_patch_data& player_hero_patch_data_wrap::data(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_patch_data_wrap.data)
  return data_.Get(index);
}
inline ::proto::db::player_hero_patch_data* player_hero_patch_data_wrap::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_patch_data_wrap.data)
  return data_.Mutable(index);
}
inline ::proto::db::player_hero_patch_data* player_hero_patch_data_wrap::add_data() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_patch_data_wrap.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >*
player_hero_patch_data_wrap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_patch_data_wrap.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >&
player_hero_patch_data_wrap::data() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_patch_data_wrap.data)
  return data_;
}

// -------------------------------------------------------------------

// player_hero

// required uint64 player_id = 1;
inline bool player_hero::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_hero::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_hero::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_hero::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 player_hero::player_id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.player_id)
  return player_id_;
}
inline void player_hero::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero.player_id)
}

// optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
inline bool player_hero::has_hero_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_hero::set_has_hero_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_hero::clear_has_hero_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_hero::clear_hero_data() {
  if (hero_data_ != NULL) hero_data_->::proto::db::player_hero_data_wrap::Clear();
  clear_has_hero_data();
}
inline const ::proto::db::player_hero_data_wrap& player_hero::hero_data() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.hero_data)
  return hero_data_ != NULL ? *hero_data_
                         : *::proto::db::player_hero_data_wrap::internal_default_instance();
}
inline ::proto::db::player_hero_data_wrap* player_hero::mutable_hero_data() {
  set_has_hero_data();
  if (hero_data_ == NULL) {
    hero_data_ = new ::proto::db::player_hero_data_wrap;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero.hero_data)
  return hero_data_;
}
inline ::proto::db::player_hero_data_wrap* player_hero::release_hero_data() {
  // @@protoc_insertion_point(field_release:proto.db.player_hero.hero_data)
  clear_has_hero_data();
  ::proto::db::player_hero_data_wrap* temp = hero_data_;
  hero_data_ = NULL;
  return temp;
}
inline void player_hero::set_allocated_hero_data(::proto::db::player_hero_data_wrap* hero_data) {
  delete hero_data_;
  hero_data_ = hero_data;
  if (hero_data) {
    set_has_hero_data();
  } else {
    clear_has_hero_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_hero.hero_data)
}

// optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
inline bool player_hero::has_patch_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_hero::set_has_patch_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_hero::clear_has_patch_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_hero::clear_patch_data() {
  if (patch_data_ != NULL) patch_data_->::proto::db::player_hero_patch_data_wrap::Clear();
  clear_has_patch_data();
}
inline const ::proto::db::player_hero_patch_data_wrap& player_hero::patch_data() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.patch_data)
  return patch_data_ != NULL ? *patch_data_
                         : *::proto::db::player_hero_patch_data_wrap::internal_default_instance();
}
inline ::proto::db::player_hero_patch_data_wrap* player_hero::mutable_patch_data() {
  set_has_patch_data();
  if (patch_data_ == NULL) {
    patch_data_ = new ::proto::db::player_hero_patch_data_wrap;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero.patch_data)
  return patch_data_;
}
inline ::proto::db::player_hero_patch_data_wrap* player_hero::release_patch_data() {
  // @@protoc_insertion_point(field_release:proto.db.player_hero.patch_data)
  clear_has_patch_data();
  ::proto::db::player_hero_patch_data_wrap* temp = patch_data_;
  patch_data_ = NULL;
  return temp;
}
inline void player_hero::set_allocated_patch_data(::proto::db::player_hero_patch_data_wrap* patch_data) {
  delete patch_data_;
  patch_data_ = patch_data;
  if (patch_data) {
    set_has_patch_data();
  } else {
    clear_has_patch_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_hero.patch_data)
}

// -------------------------------------------------------------------

// player_hero_set

// repeated .proto.db.player_hero hero_set = 1;
inline int player_hero_set::hero_set_size() const {
  return hero_set_.size();
}
inline void player_hero_set::clear_hero_set() {
  hero_set_.Clear();
}
inline const ::proto::db::player_hero& player_hero_set::hero_set(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_set.hero_set)
  return hero_set_.Get(index);
}
inline ::proto::db::player_hero* player_hero_set::mutable_hero_set(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_set.hero_set)
  return hero_set_.Mutable(index);
}
inline ::proto::db::player_hero* player_hero_set::add_hero_set() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_set.hero_set)
  return hero_set_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >*
player_hero_set::mutable_hero_set() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_set.hero_set)
  return &hero_set_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >&
player_hero_set::hero_set() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_set.hero_set)
  return hero_set_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_5fhero_2eproto__INCLUDED
