// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_hero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_hero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {
class player_hero_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero_data> {
} _player_hero_data_default_instance_;
class player_hero_data_wrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero_data_wrap> {
} _player_hero_data_wrap_default_instance_;
class player_hero_patch_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero_patch_data> {
} _player_hero_patch_data_default_instance_;
class player_hero_patch_data_wrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero_patch_data_wrap> {
} _player_hero_patch_data_wrap_default_instance_;
class player_heroDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero> {
} _player_hero_default_instance_;
class player_hero_setDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_hero_set> {
} _player_hero_set_default_instance_;

namespace protobuf_player_5fhero_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data_wrap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data_wrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_data_wrap, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data_wrap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data_wrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_patch_data_wrap, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero, hero_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero, patch_data_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_set, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_hero_set, hero_set_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(player_hero_data)},
  { 7, 13, sizeof(player_hero_data_wrap)},
  { 14, 20, sizeof(player_hero_patch_data)},
  { 21, 27, sizeof(player_hero_patch_data_wrap)},
  { 28, 36, sizeof(player_hero)},
  { 39, 45, sizeof(player_hero_set)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_data_wrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_patch_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_patch_data_wrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_hero_set_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player_hero.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _player_hero_data_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _player_hero_data_wrap_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _player_hero_patch_data_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _player_hero_patch_data_wrap_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _player_hero_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _player_hero_set_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_db_5foption_2eproto::InitDefaults();
  _player_hero_data_default_instance_.DefaultConstruct();
  _player_hero_data_wrap_default_instance_.DefaultConstruct();
  _player_hero_patch_data_default_instance_.DefaultConstruct();
  _player_hero_patch_data_wrap_default_instance_.DefaultConstruct();
  _player_hero_default_instance_.DefaultConstruct();
  _player_hero_set_default_instance_.DefaultConstruct();
  _player_hero_default_instance_.get_mutable()->hero_data_ = const_cast< ::proto::db::player_hero_data_wrap*>(
      ::proto::db::player_hero_data_wrap::internal_default_instance());
  _player_hero_default_instance_.get_mutable()->patch_data_ = const_cast< ::proto::db::player_hero_patch_data_wrap*>(
      ::proto::db::player_hero_patch_data_wrap::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021player_hero.proto\022\010proto.db\032\017db_option"
      ".proto\"\036\n\020player_hero_data\022\n\n\002id\030\001 \002(\r\"A"
      "\n\025player_hero_data_wrap\022(\n\004data\030\001 \003(\0132\032."
      "proto.db.player_hero_data\"$\n\026player_hero"
      "_patch_data\022\n\n\002id\030\001 \002(\r\"M\n\033player_hero_p"
      "atch_data_wrap\022.\n\004data\030\001 \003(\0132 .proto.db."
      "player_hero_patch_data\"\252\001\n\013player_hero\022\021"
      "\n\tplayer_id\030\001 \002(\004\0228\n\thero_data\030\002 \001(\0132\037.p"
      "roto.db.player_hero_data_wrapB\004\210\265\030\001\022\?\n\np"
      "atch_data\030\003 \001(\0132%.proto.db.player_hero_p"
      "atch_data_wrapB\004\210\265\030\001:\r\202\265\030\tplayer_id\":\n\017p"
      "layer_hero_set\022\'\n\010hero_set\030\001 \003(\0132\025.proto"
      ".db.player_hero"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 495);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_hero.proto", &protobuf_RegisterTypes);
  ::protobuf_db_5foption_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_player_5fhero_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero_data::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero_data::player_hero_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero_data)
}
player_hero_data::player_hero_data(const player_hero_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero_data)
}

void player_hero_data::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

player_hero_data::~player_hero_data() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero_data)
  SharedDtor();
}

void player_hero_data::SharedDtor() {
}

void player_hero_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero_data::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero_data& player_hero_data::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero_data* player_hero_data::New(::google::protobuf::Arena* arena) const {
  player_hero_data* n = new player_hero_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero_data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero_data)
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero_data)
  return false;
#undef DO_
}

void player_hero_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero_data)
}

::google::protobuf::uint8* player_hero_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero_data)
  return target;
}

size_t player_hero_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero_data)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero_data)
    MergeFrom(*source);
  }
}

void player_hero_data::MergeFrom(const player_hero_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void player_hero_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero_data::CopyFrom(const player_hero_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void player_hero_data::Swap(player_hero_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero_data::InternalSwap(player_hero_data* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero_data::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_data

// required uint32 id = 1;
bool player_hero_data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void player_hero_data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void player_hero_data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void player_hero_data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 player_hero_data::id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_data.id)
  return id_;
}
void player_hero_data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero_data.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero_data_wrap::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero_data_wrap::player_hero_data_wrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero_data_wrap)
}
player_hero_data_wrap::player_hero_data_wrap(const player_hero_data_wrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero_data_wrap)
}

void player_hero_data_wrap::SharedCtor() {
  _cached_size_ = 0;
}

player_hero_data_wrap::~player_hero_data_wrap() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero_data_wrap)
  SharedDtor();
}

void player_hero_data_wrap::SharedDtor() {
}

void player_hero_data_wrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero_data_wrap::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero_data_wrap& player_hero_data_wrap::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero_data_wrap* player_hero_data_wrap::New(::google::protobuf::Arena* arena) const {
  player_hero_data_wrap* n = new player_hero_data_wrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero_data_wrap::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero_data_wrap)
  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero_data_wrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero_data_wrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_hero_data data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero_data_wrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero_data_wrap)
  return false;
#undef DO_
}

void player_hero_data_wrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero_data_wrap)
}

::google::protobuf::uint8* player_hero_data_wrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero_data_wrap)
  return target;
}

size_t player_hero_data_wrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero_data_wrap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.db.player_hero_data data = 1;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero_data_wrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero_data_wrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero_data_wrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero_data_wrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero_data_wrap)
    MergeFrom(*source);
  }
}

void player_hero_data_wrap::MergeFrom(const player_hero_data_wrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void player_hero_data_wrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero_data_wrap::CopyFrom(const player_hero_data_wrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero_data_wrap::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void player_hero_data_wrap::Swap(player_hero_data_wrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero_data_wrap::InternalSwap(player_hero_data_wrap* other) {
  data_.InternalSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero_data_wrap::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_data_wrap

// repeated .proto.db.player_hero_data data = 1;
int player_hero_data_wrap::data_size() const {
  return data_.size();
}
void player_hero_data_wrap::clear_data() {
  data_.Clear();
}
const ::proto::db::player_hero_data& player_hero_data_wrap::data(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_data_wrap.data)
  return data_.Get(index);
}
::proto::db::player_hero_data* player_hero_data_wrap::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_data_wrap.data)
  return data_.Mutable(index);
}
::proto::db::player_hero_data* player_hero_data_wrap::add_data() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_data_wrap.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >*
player_hero_data_wrap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_data_wrap.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_data >&
player_hero_data_wrap::data() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_data_wrap.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero_patch_data::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero_patch_data::player_hero_patch_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero_patch_data)
}
player_hero_patch_data::player_hero_patch_data(const player_hero_patch_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero_patch_data)
}

void player_hero_patch_data::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

player_hero_patch_data::~player_hero_patch_data() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero_patch_data)
  SharedDtor();
}

void player_hero_patch_data::SharedDtor() {
}

void player_hero_patch_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero_patch_data::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero_patch_data& player_hero_patch_data::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero_patch_data* player_hero_patch_data::New(::google::protobuf::Arena* arena) const {
  player_hero_patch_data* n = new player_hero_patch_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero_patch_data::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero_patch_data)
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero_patch_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero_patch_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero_patch_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero_patch_data)
  return false;
#undef DO_
}

void player_hero_patch_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero_patch_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero_patch_data)
}

::google::protobuf::uint8* player_hero_patch_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero_patch_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero_patch_data)
  return target;
}

size_t player_hero_patch_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero_patch_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero_patch_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero_patch_data)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero_patch_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero_patch_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero_patch_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero_patch_data)
    MergeFrom(*source);
  }
}

void player_hero_patch_data::MergeFrom(const player_hero_patch_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero_patch_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void player_hero_patch_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero_patch_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero_patch_data::CopyFrom(const player_hero_patch_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero_patch_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero_patch_data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void player_hero_patch_data::Swap(player_hero_patch_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero_patch_data::InternalSwap(player_hero_patch_data* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero_patch_data::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_patch_data

// required uint32 id = 1;
bool player_hero_patch_data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void player_hero_patch_data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void player_hero_patch_data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void player_hero_patch_data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 player_hero_patch_data::id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_patch_data.id)
  return id_;
}
void player_hero_patch_data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero_patch_data.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero_patch_data_wrap::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero_patch_data_wrap::player_hero_patch_data_wrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero_patch_data_wrap)
}
player_hero_patch_data_wrap::player_hero_patch_data_wrap(const player_hero_patch_data_wrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero_patch_data_wrap)
}

void player_hero_patch_data_wrap::SharedCtor() {
  _cached_size_ = 0;
}

player_hero_patch_data_wrap::~player_hero_patch_data_wrap() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero_patch_data_wrap)
  SharedDtor();
}

void player_hero_patch_data_wrap::SharedDtor() {
}

void player_hero_patch_data_wrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero_patch_data_wrap::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero_patch_data_wrap& player_hero_patch_data_wrap::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero_patch_data_wrap* player_hero_patch_data_wrap::New(::google::protobuf::Arena* arena) const {
  player_hero_patch_data_wrap* n = new player_hero_patch_data_wrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero_patch_data_wrap::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero_patch_data_wrap)
  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero_patch_data_wrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero_patch_data_wrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_hero_patch_data data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero_patch_data_wrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero_patch_data_wrap)
  return false;
#undef DO_
}

void player_hero_patch_data_wrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero_patch_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero_patch_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero_patch_data_wrap)
}

::google::protobuf::uint8* player_hero_patch_data_wrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero_patch_data_wrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero_patch_data data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero_patch_data_wrap)
  return target;
}

size_t player_hero_patch_data_wrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero_patch_data_wrap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.db.player_hero_patch_data data = 1;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero_patch_data_wrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero_patch_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero_patch_data_wrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero_patch_data_wrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero_patch_data_wrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero_patch_data_wrap)
    MergeFrom(*source);
  }
}

void player_hero_patch_data_wrap::MergeFrom(const player_hero_patch_data_wrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero_patch_data_wrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void player_hero_patch_data_wrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero_patch_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero_patch_data_wrap::CopyFrom(const player_hero_patch_data_wrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero_patch_data_wrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero_patch_data_wrap::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void player_hero_patch_data_wrap::Swap(player_hero_patch_data_wrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero_patch_data_wrap::InternalSwap(player_hero_patch_data_wrap* other) {
  data_.InternalSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero_patch_data_wrap::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_patch_data_wrap

// repeated .proto.db.player_hero_patch_data data = 1;
int player_hero_patch_data_wrap::data_size() const {
  return data_.size();
}
void player_hero_patch_data_wrap::clear_data() {
  data_.Clear();
}
const ::proto::db::player_hero_patch_data& player_hero_patch_data_wrap::data(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_patch_data_wrap.data)
  return data_.Get(index);
}
::proto::db::player_hero_patch_data* player_hero_patch_data_wrap::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_patch_data_wrap.data)
  return data_.Mutable(index);
}
::proto::db::player_hero_patch_data* player_hero_patch_data_wrap::add_data() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_patch_data_wrap.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >*
player_hero_patch_data_wrap::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_patch_data_wrap.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero_patch_data >&
player_hero_patch_data_wrap::data() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_patch_data_wrap.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero::kPlayerIdFieldNumber;
const int player_hero::kHeroDataFieldNumber;
const int player_hero::kPatchDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero::player_hero()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero)
}
player_hero::player_hero(const player_hero& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hero_data()) {
    hero_data_ = new ::proto::db::player_hero_data_wrap(*from.hero_data_);
  } else {
    hero_data_ = NULL;
  }
  if (from.has_patch_data()) {
    patch_data_ = new ::proto::db::player_hero_patch_data_wrap(*from.patch_data_);
  } else {
    patch_data_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero)
}

void player_hero::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hero_data_, 0, reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&hero_data_) + sizeof(player_id_));
}

player_hero::~player_hero() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero)
  SharedDtor();
}

void player_hero::SharedDtor() {
  if (this != internal_default_instance()) {
    delete hero_data_;
  }
  if (this != internal_default_instance()) {
    delete patch_data_;
  }
}

void player_hero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero& player_hero::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero* player_hero::New(::google::protobuf::Arena* arena) const {
  player_hero* n = new player_hero;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_hero_data()) {
      GOOGLE_DCHECK(hero_data_ != NULL);
      hero_data_->::proto::db::player_hero_data_wrap::Clear();
    }
    if (has_patch_data()) {
      GOOGLE_DCHECK(patch_data_ != NULL);
      patch_data_->::proto::db::player_hero_patch_data_wrap::Clear();
    }
  }
  player_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patch_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero)
  return false;
#undef DO_
}

void player_hero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->hero_data_, output);
  }

  // optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->patch_data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero)
}

::google::protobuf::uint8* player_hero::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->hero_data_, deterministic, target);
  }

  // optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->patch_data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero)
  return target;
}

size_t player_hero::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
    if (has_hero_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hero_data_);
    }

    // optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
    if (has_patch_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->patch_data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero)
    MergeFrom(*source);
  }
}

void player_hero::MergeFrom(const player_hero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hero_data()->::proto::db::player_hero_data_wrap::MergeFrom(from.hero_data());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_patch_data()->::proto::db::player_hero_patch_data_wrap::MergeFrom(from.patch_data());
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void player_hero::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero::CopyFrom(const player_hero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_hero_data()) {
    if (!this->hero_data_->IsInitialized()) return false;
  }
  if (has_patch_data()) {
    if (!this->patch_data_->IsInitialized()) return false;
  }
  return true;
}

void player_hero::Swap(player_hero* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero::InternalSwap(player_hero* other) {
  std::swap(hero_data_, other->hero_data_);
  std::swap(patch_data_, other->patch_data_);
  std::swap(player_id_, other->player_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero

// required uint64 player_id = 1;
bool player_hero::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void player_hero::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
void player_hero::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void player_hero::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
::google::protobuf::uint64 player_hero::player_id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.player_id)
  return player_id_;
}
void player_hero::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_hero.player_id)
}

// optional .proto.db.player_hero_data_wrap hero_data = 2 [(.serialize_type) = 1];
bool player_hero::has_hero_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void player_hero::set_has_hero_data() {
  _has_bits_[0] |= 0x00000001u;
}
void player_hero::clear_has_hero_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void player_hero::clear_hero_data() {
  if (hero_data_ != NULL) hero_data_->::proto::db::player_hero_data_wrap::Clear();
  clear_has_hero_data();
}
const ::proto::db::player_hero_data_wrap& player_hero::hero_data() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.hero_data)
  return hero_data_ != NULL ? *hero_data_
                         : *::proto::db::player_hero_data_wrap::internal_default_instance();
}
::proto::db::player_hero_data_wrap* player_hero::mutable_hero_data() {
  set_has_hero_data();
  if (hero_data_ == NULL) {
    hero_data_ = new ::proto::db::player_hero_data_wrap;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero.hero_data)
  return hero_data_;
}
::proto::db::player_hero_data_wrap* player_hero::release_hero_data() {
  // @@protoc_insertion_point(field_release:proto.db.player_hero.hero_data)
  clear_has_hero_data();
  ::proto::db::player_hero_data_wrap* temp = hero_data_;
  hero_data_ = NULL;
  return temp;
}
void player_hero::set_allocated_hero_data(::proto::db::player_hero_data_wrap* hero_data) {
  delete hero_data_;
  hero_data_ = hero_data;
  if (hero_data) {
    set_has_hero_data();
  } else {
    clear_has_hero_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_hero.hero_data)
}

// optional .proto.db.player_hero_patch_data_wrap patch_data = 3 [(.serialize_type) = 1];
bool player_hero::has_patch_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void player_hero::set_has_patch_data() {
  _has_bits_[0] |= 0x00000002u;
}
void player_hero::clear_has_patch_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void player_hero::clear_patch_data() {
  if (patch_data_ != NULL) patch_data_->::proto::db::player_hero_patch_data_wrap::Clear();
  clear_has_patch_data();
}
const ::proto::db::player_hero_patch_data_wrap& player_hero::patch_data() const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero.patch_data)
  return patch_data_ != NULL ? *patch_data_
                         : *::proto::db::player_hero_patch_data_wrap::internal_default_instance();
}
::proto::db::player_hero_patch_data_wrap* player_hero::mutable_patch_data() {
  set_has_patch_data();
  if (patch_data_ == NULL) {
    patch_data_ = new ::proto::db::player_hero_patch_data_wrap;
  }
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero.patch_data)
  return patch_data_;
}
::proto::db::player_hero_patch_data_wrap* player_hero::release_patch_data() {
  // @@protoc_insertion_point(field_release:proto.db.player_hero.patch_data)
  clear_has_patch_data();
  ::proto::db::player_hero_patch_data_wrap* temp = patch_data_;
  patch_data_ = NULL;
  return temp;
}
void player_hero::set_allocated_patch_data(::proto::db::player_hero_patch_data_wrap* patch_data) {
  delete patch_data_;
  patch_data_ = patch_data;
  if (patch_data) {
    set_has_patch_data();
  } else {
    clear_has_patch_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_hero.patch_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_hero_set::kHeroSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_hero_set::player_hero_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fhero_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_hero_set)
}
player_hero_set::player_hero_set(const player_hero_set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      hero_set_(from.hero_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_hero_set)
}

void player_hero_set::SharedCtor() {
  _cached_size_ = 0;
}

player_hero_set::~player_hero_set() {
  // @@protoc_insertion_point(destructor:proto.db.player_hero_set)
  SharedDtor();
}

void player_hero_set::SharedDtor() {
}

void player_hero_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_hero_set::descriptor() {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_hero_set& player_hero_set::default_instance() {
  protobuf_player_5fhero_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_hero_set* player_hero_set::New(::google::protobuf::Arena* arena) const {
  player_hero_set* n = new player_hero_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_hero_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_hero_set)
  hero_set_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_hero_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_hero_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_hero hero_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hero_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_hero_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_hero_set)
  return false;
#undef DO_
}

void player_hero_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_hero_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero hero_set = 1;
  for (unsigned int i = 0, n = this->hero_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero_set(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_hero_set)
}

::google::protobuf::uint8* player_hero_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_hero_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_hero hero_set = 1;
  for (unsigned int i = 0, n = this->hero_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->hero_set(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_hero_set)
  return target;
}

size_t player_hero_set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_hero_set)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.db.player_hero hero_set = 1;
  {
    unsigned int count = this->hero_set_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero_set(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_hero_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_hero_set)
  GOOGLE_DCHECK_NE(&from, this);
  const player_hero_set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_hero_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_hero_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_hero_set)
    MergeFrom(*source);
  }
}

void player_hero_set::MergeFrom(const player_hero_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_hero_set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hero_set_.MergeFrom(from.hero_set_);
}

void player_hero_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_hero_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_hero_set::CopyFrom(const player_hero_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_hero_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_hero_set::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->hero_set())) return false;
  return true;
}

void player_hero_set::Swap(player_hero_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_hero_set::InternalSwap(player_hero_set* other) {
  hero_set_.InternalSwap(&other->hero_set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_hero_set::GetMetadata() const {
  protobuf_player_5fhero_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fhero_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_hero_set

// repeated .proto.db.player_hero hero_set = 1;
int player_hero_set::hero_set_size() const {
  return hero_set_.size();
}
void player_hero_set::clear_hero_set() {
  hero_set_.Clear();
}
const ::proto::db::player_hero& player_hero_set::hero_set(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_hero_set.hero_set)
  return hero_set_.Get(index);
}
::proto::db::player_hero* player_hero_set::mutable_hero_set(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_hero_set.hero_set)
  return hero_set_.Mutable(index);
}
::proto::db::player_hero* player_hero_set::add_hero_set() {
  // @@protoc_insertion_point(field_add:proto.db.player_hero_set.hero_set)
  return hero_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >*
player_hero_set::mutable_hero_set() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_hero_set.hero_set)
  return &hero_set_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_hero >&
player_hero_set::hero_set() const {
  // @@protoc_insertion_point(field_list:proto.db.player_hero_set.hero_set)
  return hero_set_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)
