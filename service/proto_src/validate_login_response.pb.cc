// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate_login_response.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "validate_login_response.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class validate_login_responseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<validate_login_response> {
} _validate_login_response_default_instance_;

namespace protobuf_validate_5flogin_5fresponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(validate_login_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(validate_login_response, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(validate_login_response, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(validate_login_response, gate_addr_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(validate_login_response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_validate_login_response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "validate_login_response.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _validate_login_response_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _validate_login_response_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\035validate_login_response.proto\"I\n\027valid"
      "ate_login_response\022\013\n\003key\030\001 \001(\t\022\016\n\006resul"
      "t\030\002 \001(\r\022\021\n\tgate_addr\030\003 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 114);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "validate_login_response.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_validate_5flogin_5fresponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int validate_login_response::kKeyFieldNumber;
const int validate_login_response::kResultFieldNumber;
const int validate_login_response::kGateAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

validate_login_response::validate_login_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_validate_5flogin_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:validate_login_response)
}
validate_login_response::validate_login_response(const validate_login_response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  gate_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gate_addr().size() > 0) {
    gate_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_addr_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:validate_login_response)
}

void validate_login_response::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
  _cached_size_ = 0;
}

validate_login_response::~validate_login_response() {
  // @@protoc_insertion_point(destructor:validate_login_response)
  SharedDtor();
}

void validate_login_response::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void validate_login_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* validate_login_response::descriptor() {
  protobuf_validate_5flogin_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_validate_5flogin_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const validate_login_response& validate_login_response::default_instance() {
  protobuf_validate_5flogin_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

validate_login_response* validate_login_response::New(::google::protobuf::Arena* arena) const {
  validate_login_response* n = new validate_login_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void validate_login_response::Clear() {
// @@protoc_insertion_point(message_clear_start:validate_login_response)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
}

bool validate_login_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:validate_login_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "validate_login_response.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gate_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gate_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gate_addr().data(), this->gate_addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "validate_login_response.gate_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:validate_login_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:validate_login_response)
  return false;
#undef DO_
}

void validate_login_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:validate_login_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "validate_login_response.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // string gate_addr = 3;
  if (this->gate_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gate_addr().data(), this->gate_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "validate_login_response.gate_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gate_addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:validate_login_response)
}

::google::protobuf::uint8* validate_login_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:validate_login_response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "validate_login_response.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // string gate_addr = 3;
  if (this->gate_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gate_addr().data(), this->gate_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "validate_login_response.gate_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gate_addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:validate_login_response)
  return target;
}

size_t validate_login_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:validate_login_response)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string gate_addr = 3;
  if (this->gate_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gate_addr());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void validate_login_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:validate_login_response)
  GOOGLE_DCHECK_NE(&from, this);
  const validate_login_response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const validate_login_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:validate_login_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:validate_login_response)
    MergeFrom(*source);
  }
}

void validate_login_response::MergeFrom(const validate_login_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:validate_login_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.gate_addr().size() > 0) {

    gate_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_addr_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void validate_login_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:validate_login_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void validate_login_response::CopyFrom(const validate_login_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:validate_login_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool validate_login_response::IsInitialized() const {
  return true;
}

void validate_login_response::Swap(validate_login_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void validate_login_response::InternalSwap(validate_login_response* other) {
  key_.Swap(&other->key_);
  gate_addr_.Swap(&other->gate_addr_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata validate_login_response::GetMetadata() const {
  protobuf_validate_5flogin_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_validate_5flogin_5fresponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// validate_login_response

// string key = 1;
void validate_login_response::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& validate_login_response::key() const {
  // @@protoc_insertion_point(field_get:validate_login_response.key)
  return key_.GetNoArena();
}
void validate_login_response::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:validate_login_response.key)
}
#if LANG_CXX11
void validate_login_response::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:validate_login_response.key)
}
#endif
void validate_login_response::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:validate_login_response.key)
}
void validate_login_response::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:validate_login_response.key)
}
::std::string* validate_login_response::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:validate_login_response.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* validate_login_response::release_key() {
  // @@protoc_insertion_point(field_release:validate_login_response.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void validate_login_response::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:validate_login_response.key)
}

// uint32 result = 2;
void validate_login_response::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 validate_login_response::result() const {
  // @@protoc_insertion_point(field_get:validate_login_response.result)
  return result_;
}
void validate_login_response::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:validate_login_response.result)
}

// string gate_addr = 3;
void validate_login_response::clear_gate_addr() {
  gate_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& validate_login_response::gate_addr() const {
  // @@protoc_insertion_point(field_get:validate_login_response.gate_addr)
  return gate_addr_.GetNoArena();
}
void validate_login_response::set_gate_addr(const ::std::string& value) {
  
  gate_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:validate_login_response.gate_addr)
}
#if LANG_CXX11
void validate_login_response::set_gate_addr(::std::string&& value) {
  
  gate_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:validate_login_response.gate_addr)
}
#endif
void validate_login_response::set_gate_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gate_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:validate_login_response.gate_addr)
}
void validate_login_response::set_gate_addr(const char* value, size_t size) {
  
  gate_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:validate_login_response.gate_addr)
}
::std::string* validate_login_response::mutable_gate_addr() {
  
  // @@protoc_insertion_point(field_mutable:validate_login_response.gate_addr)
  return gate_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* validate_login_response::release_gate_addr() {
  // @@protoc_insertion_point(field_release:validate_login_response.gate_addr)
  
  return gate_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void validate_login_response::set_allocated_gate_addr(::std::string* gate_addr) {
  if (gate_addr != NULL) {
    
  } else {
    
  }
  gate_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_addr);
  // @@protoc_insertion_point(field_set_allocated:validate_login_response.gate_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
