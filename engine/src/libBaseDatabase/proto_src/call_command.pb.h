// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: call_command.proto

#ifndef PROTOBUF_call_5fcommand_2eproto__INCLUDED
#define PROTOBUF_call_5fcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
namespace db {
class call_command;
class call_commandDefaultTypeInternal;
extern call_commandDefaultTypeInternal _call_command_default_instance_;
}  // namespace db
}  // namespace proto

namespace proto {
namespace db {

namespace protobuf_call_5fcommand_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_call_5fcommand_2eproto

// ===================================================================

class call_command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.db.call_command) */ {
 public:
  call_command();
  virtual ~call_command();

  call_command(const call_command& from);

  inline call_command& operator=(const call_command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const call_command& default_instance();

  static inline const call_command* internal_default_instance() {
    return reinterpret_cast<const call_command*>(
               &_call_command_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(call_command* other);

  // implements Message ----------------------------------------------

  inline call_command* New() const PROTOBUF_FINAL { return New(NULL); }

  call_command* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const call_command& from);
  void MergeFrom(const call_command& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(call_command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_args(int index, ::std::string&& value);
  #endif
  void set_args(int index, const char* value);
  void set_args(int index, const void* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  #if LANG_CXX11
  void add_args(::std::string&& value);
  #endif
  void add_args(const char* value);
  void add_args(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // required string sql = 2;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 2;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // required uint32 channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.db.call_command)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_sql();
  void clear_has_sql();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::uint32 channel_id_;
  friend struct protobuf_call_5fcommand_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// call_command

// required uint32 channel_id = 1;
inline bool call_command::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void call_command::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void call_command::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void call_command::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 call_command::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.db.call_command.channel_id)
  return channel_id_;
}
inline void call_command::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.call_command.channel_id)
}

// required string sql = 2;
inline bool call_command::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void call_command::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void call_command::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void call_command::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& call_command::sql() const {
  // @@protoc_insertion_point(field_get:proto.db.call_command.sql)
  return sql_.GetNoArena();
}
inline void call_command::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.db.call_command.sql)
}
#if LANG_CXX11
inline void call_command::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.db.call_command.sql)
}
#endif
inline void call_command::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.db.call_command.sql)
}
inline void call_command::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.db.call_command.sql)
}
inline ::std::string* call_command::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:proto.db.call_command.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* call_command::release_sql() {
  // @@protoc_insertion_point(field_release:proto.db.call_command.sql)
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void call_command::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:proto.db.call_command.sql)
}

// repeated bytes args = 3;
inline int call_command::args_size() const {
  return args_.size();
}
inline void call_command::clear_args() {
  args_.Clear();
}
inline const ::std::string& call_command::args(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.call_command.args)
  return args_.Get(index);
}
inline ::std::string* call_command::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.call_command.args)
  return args_.Mutable(index);
}
inline void call_command::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.db.call_command.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void call_command::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.db.call_command.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
inline void call_command::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.db.call_command.args)
}
inline void call_command::set_args(int index, const void* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.db.call_command.args)
}
inline ::std::string* call_command::add_args() {
  // @@protoc_insertion_point(field_add_mutable:proto.db.call_command.args)
  return args_.Add();
}
inline void call_command::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.db.call_command.args)
}
#if LANG_CXX11
inline void call_command::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.db.call_command.args)
}
#endif
inline void call_command::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.db.call_command.args)
}
inline void call_command::add_args(const void* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.db.call_command.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
call_command::args() const {
  // @@protoc_insertion_point(field_list:proto.db.call_command.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
call_command::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.call_command.args)
  return &args_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_call_5fcommand_2eproto__INCLUDED
