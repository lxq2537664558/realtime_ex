// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace db {
class player_baseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_base> {
} _player_base_default_instance_;
class player_base_setDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_base_set> {
} _player_base_set_default_instance_;

namespace protobuf_player_5fbase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, last_login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, last_logout_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base, vitality_),
  2,
  0,
  5,
  3,
  4,
  1,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base_set, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base_set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_base_set, data_set_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 15, sizeof(player_base)},
  { 25, 31, sizeof(player_base_set)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_base_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_base_set_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player_base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _player_base_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _player_base_set_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_db_5foption_2eproto::InitDefaults();
  _player_base_default_instance_.DefaultConstruct();
  _player_base_set_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021player_base.proto\022\010proto.db\032\017db_option"
      ".proto\"\324\001\n\013player_base\022\021\n\tplayer_id\030\001 \002("
      "\004\022\024\n\014account_name\030\002 \001(\t\022\021\n\tserver_id\030\003 \001"
      "(\r\022\027\n\017last_login_time\030\004 \001(\004\022\030\n\020last_logo"
      "ut_time\030\005 \001(\004\022\014\n\004name\030\006 \001(\t\022\n\n\002lv\030\007 \001(\r\022"
      "\014\n\004gold\030\010 \001(\004\022\r\n\005money\030\t \001(\004\022\020\n\010vitality"
      "\030\n \001(\004:\r\202\265\030\tplayer_id\":\n\017player_base_set"
      "\022\'\n\010data_set\030\001 \003(\0132\025.proto.db.player_bas"
      "e"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 321);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_base.proto", &protobuf_RegisterTypes);
  ::protobuf_db_5foption_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_player_5fbase_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_base::kPlayerIdFieldNumber;
const int player_base::kAccountNameFieldNumber;
const int player_base::kServerIdFieldNumber;
const int player_base::kLastLoginTimeFieldNumber;
const int player_base::kLastLogoutTimeFieldNumber;
const int player_base::kNameFieldNumber;
const int player_base::kLvFieldNumber;
const int player_base::kGoldFieldNumber;
const int player_base::kMoneyFieldNumber;
const int player_base::kVitalityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_base::player_base()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_base)
}
player_base::player_base(const player_base& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    reinterpret_cast<char*>(&vitality_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(vitality_));
  // @@protoc_insertion_point(copy_constructor:proto.db.player_base)
}

void player_base::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&vitality_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(vitality_));
}

player_base::~player_base() {
  // @@protoc_insertion_point(destructor:proto.db.player_base)
  SharedDtor();
}

void player_base::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void player_base::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_base::descriptor() {
  protobuf_player_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_base& player_base::default_instance() {
  protobuf_player_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_base* player_base::New(::google::protobuf::Arena* arena) const {
  player_base* n = new player_base;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_base::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_base)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account_name()) {
      GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&player_id_, 0, reinterpret_cast<char*>(&gold_) -
      reinterpret_cast<char*>(&player_id_) + sizeof(gold_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&vitality_) -
      reinterpret_cast<char*>(&money_) + sizeof(vitality_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_base::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_base)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.db.player_base.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_server_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_login_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_last_login_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_logout_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_last_logout_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_logout_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.db.player_base.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 lv = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gold = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 money = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 vitality = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_vitality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vitality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_base)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_base)
  return false;
#undef DO_
}

void player_base::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.player_base.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional uint32 server_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_id(), output);
  }

  // optional uint64 last_login_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->last_login_time(), output);
  }

  // optional uint64 last_logout_time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->last_logout_time(), output);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.player_base.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional uint32 lv = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->lv(), output);
  }

  // optional uint64 gold = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->gold(), output);
  }

  // optional uint64 money = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->money(), output);
  }

  // optional uint64 vitality = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->vitality(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_base)
}

::google::protobuf::uint8* player_base::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.player_base.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional uint32 server_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_id(), target);
  }

  // optional uint64 last_login_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->last_login_time(), target);
  }

  // optional uint64 last_logout_time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->last_logout_time(), target);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.db.player_base.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional uint32 lv = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->lv(), target);
  }

  // optional uint64 gold = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->gold(), target);
  }

  // optional uint64 money = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->money(), target);
  }

  // optional uint64 vitality = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->vitality(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_base)
  return target;
}

size_t player_base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_base)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string name = 6;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional uint64 last_login_time = 4;
    if (has_last_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_login_time());
    }

    // optional uint64 last_logout_time = 5;
    if (has_last_logout_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_logout_time());
    }

    // optional uint32 server_id = 3;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

    // optional uint32 lv = 7;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

    // optional uint64 gold = 8;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gold());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 money = 9;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->money());
    }

    // optional uint64 vitality = 10;
    if (has_vitality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->vitality());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_base::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_base)
  GOOGLE_DCHECK_NE(&from, this);
  const player_base* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_base>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_base)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_base)
    MergeFrom(*source);
  }
}

void player_base::MergeFrom(const player_base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_base)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      last_login_time_ = from.last_login_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_logout_time_ = from.last_logout_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      server_id_ = from.server_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000080u) {
      gold_ = from.gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000200u) {
      vitality_ = from.vitality_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void player_base::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_base::CopyFrom(const player_base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_base::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void player_base::Swap(player_base* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_base::InternalSwap(player_base* other) {
  account_name_.Swap(&other->account_name_);
  name_.Swap(&other->name_);
  std::swap(player_id_, other->player_id_);
  std::swap(last_login_time_, other->last_login_time_);
  std::swap(last_logout_time_, other->last_logout_time_);
  std::swap(server_id_, other->server_id_);
  std::swap(lv_, other->lv_);
  std::swap(gold_, other->gold_);
  std::swap(money_, other->money_);
  std::swap(vitality_, other->vitality_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_base::GetMetadata() const {
  protobuf_player_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_base

// required uint64 player_id = 1;
bool player_base::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void player_base::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
void player_base::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void player_base::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
::google::protobuf::uint64 player_base::player_id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.player_id)
  return player_id_;
}
void player_base::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.player_id)
}

// optional string account_name = 2;
bool player_base::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void player_base::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void player_base::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void player_base::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& player_base::account_name() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.account_name)
  return account_name_.GetNoArena();
}
void player_base::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.db.player_base.account_name)
}
#if LANG_CXX11
void player_base::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.db.player_base.account_name)
}
#endif
void player_base::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.db.player_base.account_name)
}
void player_base::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.db.player_base.account_name)
}
::std::string* player_base::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:proto.db.player_base.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* player_base::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.db.player_base.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void player_base::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_base.account_name)
}

// optional uint32 server_id = 3;
bool player_base::has_server_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void player_base::set_has_server_id() {
  _has_bits_[0] |= 0x00000020u;
}
void player_base::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void player_base::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
::google::protobuf::uint32 player_base::server_id() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.server_id)
  return server_id_;
}
void player_base::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.server_id)
}

// optional uint64 last_login_time = 4;
bool player_base::has_last_login_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void player_base::set_has_last_login_time() {
  _has_bits_[0] |= 0x00000008u;
}
void player_base::clear_has_last_login_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void player_base::clear_last_login_time() {
  last_login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_login_time();
}
::google::protobuf::uint64 player_base::last_login_time() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.last_login_time)
  return last_login_time_;
}
void player_base::set_last_login_time(::google::protobuf::uint64 value) {
  set_has_last_login_time();
  last_login_time_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.last_login_time)
}

// optional uint64 last_logout_time = 5;
bool player_base::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void player_base::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000010u;
}
void player_base::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void player_base::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_logout_time();
}
::google::protobuf::uint64 player_base::last_logout_time() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.last_logout_time)
  return last_logout_time_;
}
void player_base::set_last_logout_time(::google::protobuf::uint64 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.last_logout_time)
}

// optional string name = 6;
bool player_base::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void player_base::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void player_base::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void player_base::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& player_base::name() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.name)
  return name_.GetNoArena();
}
void player_base::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.db.player_base.name)
}
#if LANG_CXX11
void player_base::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.db.player_base.name)
}
#endif
void player_base::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.db.player_base.name)
}
void player_base::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.db.player_base.name)
}
::std::string* player_base::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.db.player_base.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* player_base::release_name() {
  // @@protoc_insertion_point(field_release:proto.db.player_base.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void player_base::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.db.player_base.name)
}

// optional uint32 lv = 7;
bool player_base::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void player_base::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
void player_base::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
void player_base::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
::google::protobuf::uint32 player_base::lv() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.lv)
  return lv_;
}
void player_base::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.lv)
}

// optional uint64 gold = 8;
bool player_base::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void player_base::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
void player_base::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
void player_base::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  clear_has_gold();
}
::google::protobuf::uint64 player_base::gold() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.gold)
  return gold_;
}
void player_base::set_gold(::google::protobuf::uint64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.gold)
}

// optional uint64 money = 9;
bool player_base::has_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void player_base::set_has_money() {
  _has_bits_[0] |= 0x00000100u;
}
void player_base::clear_has_money() {
  _has_bits_[0] &= ~0x00000100u;
}
void player_base::clear_money() {
  money_ = GOOGLE_ULONGLONG(0);
  clear_has_money();
}
::google::protobuf::uint64 player_base::money() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.money)
  return money_;
}
void player_base::set_money(::google::protobuf::uint64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.money)
}

// optional uint64 vitality = 10;
bool player_base::has_vitality() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void player_base::set_has_vitality() {
  _has_bits_[0] |= 0x00000200u;
}
void player_base::clear_has_vitality() {
  _has_bits_[0] &= ~0x00000200u;
}
void player_base::clear_vitality() {
  vitality_ = GOOGLE_ULONGLONG(0);
  clear_has_vitality();
}
::google::protobuf::uint64 player_base::vitality() const {
  // @@protoc_insertion_point(field_get:proto.db.player_base.vitality)
  return vitality_;
}
void player_base::set_vitality(::google::protobuf::uint64 value) {
  set_has_vitality();
  vitality_ = value;
  // @@protoc_insertion_point(field_set:proto.db.player_base.vitality)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_base_set::kDataSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_base_set::player_base_set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.db.player_base_set)
}
player_base_set::player_base_set(const player_base_set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_set_(from.data_set_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.db.player_base_set)
}

void player_base_set::SharedCtor() {
  _cached_size_ = 0;
}

player_base_set::~player_base_set() {
  // @@protoc_insertion_point(destructor:proto.db.player_base_set)
  SharedDtor();
}

void player_base_set::SharedDtor() {
}

void player_base_set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_base_set::descriptor() {
  protobuf_player_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_base_set& player_base_set::default_instance() {
  protobuf_player_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_base_set* player_base_set::New(::google::protobuf::Arena* arena) const {
  player_base_set* n = new player_base_set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_base_set::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.db.player_base_set)
  data_set_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool player_base_set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.db.player_base_set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.db.player_base data_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.db.player_base_set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.db.player_base_set)
  return false;
#undef DO_
}

void player_base_set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.db.player_base_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_base data_set = 1;
  for (unsigned int i = 0, n = this->data_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data_set(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.db.player_base_set)
}

::google::protobuf::uint8* player_base_set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.db.player_base_set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.db.player_base data_set = 1;
  for (unsigned int i = 0, n = this->data_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data_set(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.db.player_base_set)
  return target;
}

size_t player_base_set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.db.player_base_set)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.db.player_base data_set = 1;
  {
    unsigned int count = this->data_set_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_set(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_base_set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.db.player_base_set)
  GOOGLE_DCHECK_NE(&from, this);
  const player_base_set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_base_set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.db.player_base_set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.db.player_base_set)
    MergeFrom(*source);
  }
}

void player_base_set::MergeFrom(const player_base_set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.db.player_base_set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_set_.MergeFrom(from.data_set_);
}

void player_base_set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.db.player_base_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_base_set::CopyFrom(const player_base_set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.db.player_base_set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_base_set::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data_set())) return false;
  return true;
}

void player_base_set::Swap(player_base_set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_base_set::InternalSwap(player_base_set* other) {
  data_set_.InternalSwap(&other->data_set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_base_set::GetMetadata() const {
  protobuf_player_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_base_set

// repeated .proto.db.player_base data_set = 1;
int player_base_set::data_set_size() const {
  return data_set_.size();
}
void player_base_set::clear_data_set() {
  data_set_.Clear();
}
const ::proto::db::player_base& player_base_set::data_set(int index) const {
  // @@protoc_insertion_point(field_get:proto.db.player_base_set.data_set)
  return data_set_.Get(index);
}
::proto::db::player_base* player_base_set::mutable_data_set(int index) {
  // @@protoc_insertion_point(field_mutable:proto.db.player_base_set.data_set)
  return data_set_.Mutable(index);
}
::proto::db::player_base* player_base_set::add_data_set() {
  // @@protoc_insertion_point(field_add:proto.db.player_base_set.data_set)
  return data_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::db::player_base >*
player_base_set::mutable_data_set() {
  // @@protoc_insertion_point(field_mutable_list:proto.db.player_base_set.data_set)
  return &data_set_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::db::player_base >&
player_base_set::data_set() const {
  // @@protoc_insertion_point(field_list:proto.db.player_base_set.data_set)
  return data_set_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace proto

// @@protoc_insertion_point(global_scope)
